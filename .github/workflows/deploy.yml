name: Deploy

on:
  push:
    branches: ["main", "dev", "Backend_development"]
  pull_request:
    branches: ["main", "dev", "Backend_development"]

jobs:
  run-unit-tests:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "adopt"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Authorize running gradlew
        run: chmod +x gradlew
        working-directory: ./backend/alfa

      - name: Unit tests and build artifact
        run: ./gradlew clean build
        working-directory: ./backend/alfa

      - name: Rename artifact
        run: cp build/libs/Warhammer-0.0.1-SNAPSHOT.jar Warhammer-${{ github.sha }}.jar
        working-directory: ./backend/alfa

      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          name: Warhammer
          path: ./backend/alfa/Warhammer-${{ github.sha }}.jar
  deploy:
    runs-on: ubuntu-22.04
    needs: run-unit-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get artifact
        uses: actions/download-artifact@v3
        with:
          name: Warhammer

      - name: Prepare jar file and dockerfile for aws
        run: cp backend/alfa/Dockerfile Dockerfile | cp Warhammer-${{ github.sha }}.jar Warhammer.jar

      - name: Copy jar and backend docker file to ec2 machine
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          passphrase: ${{ secrets.EC2_PASSWORD }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "Warhammer.jar,Dockerfile"
          target: .
          overwrite: true

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          passphrase: ${{ secrets.EC2_PASSWORD }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            sudo docker stop backend-container || true
            sudo docker rm backend-container || true
            sudo docker build -t backend-image .
            sudo docker run -d \
              --net ec2-user_warhammer_network \
              --name backend-container \
              -p 8080:8080 \
              -e MYSQL_HOST=ec2-user-db-1 \
              -e AWS_BUCKET_ACCESS_KEY_ID=${{ secrets.AWS_BUCKET_ACCESS_KEY_ID }} \
              -e AWS_BUCKET_SECRET_ACCESS_KEY=${{ secrets.AWS_BUCKET_SECRET_ACCESS_KEY }} \
              backend-image
